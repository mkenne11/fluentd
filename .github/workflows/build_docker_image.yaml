name: build docker image

on:
  push:
    # branches: [ "master" ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        include:
          - imageos: alpine
            dockerfile: ./docker/alphine/Dockerfile
            platforms: linux/amd64
          - imageos: debian
            dockerfile: ./docker/debian/Dockerfile
            platforms: linux/amd64,linux/arm64

    steps:
      - name: Get latest tag
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF:10}
    
      - name: Clone repository
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.vars.outputs.tag }}
    
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
    
      - name: Build and push container images
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max